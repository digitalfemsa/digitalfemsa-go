/*
Femsa API

Femsa sdk

API version: 2.1.0
Contact: engineering@femsa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package digitalfemsa

import (
	"encoding/json"
	"fmt"
)

// checks if the OrderFiscalEntityResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderFiscalEntityResponse{}

// OrderFiscalEntityResponse Fiscal entity of the order, Currently it is a purely informative field
type OrderFiscalEntityResponse struct {
	Address OrderFiscalEntityAddressResponse `json:"address"`
	// Email of the fiscal entity
	Email NullableString `json:"email,omitempty"`
	// Metadata associated with the fiscal entity
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	// Name of the fiscal entity
	Name NullableString `json:"name,omitempty"`
	// Tax ID of the fiscal entity
	TaxId NullableString `json:"tax_id,omitempty"`
	// ID of the fiscal entity
	Id string `json:"id"`
	// The time at which the object was created in seconds since the Unix epoch
	CreatedAt int64  `json:"created_at"`
	Object    string `json:"object"`
	// Phone of the fiscal entity
	Phone                NullableString `json:"phone,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderFiscalEntityResponse OrderFiscalEntityResponse

// NewOrderFiscalEntityResponse instantiates a new OrderFiscalEntityResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderFiscalEntityResponse(address OrderFiscalEntityAddressResponse, id string, createdAt int64, object string) *OrderFiscalEntityResponse {
	this := OrderFiscalEntityResponse{}
	this.Address = address
	this.Id = id
	this.CreatedAt = createdAt
	this.Object = object
	return &this
}

// NewOrderFiscalEntityResponseWithDefaults instantiates a new OrderFiscalEntityResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderFiscalEntityResponseWithDefaults() *OrderFiscalEntityResponse {
	this := OrderFiscalEntityResponse{}
	return &this
}

// GetAddress returns the Address field value
func (o *OrderFiscalEntityResponse) GetAddress() OrderFiscalEntityAddressResponse {
	if o == nil {
		var ret OrderFiscalEntityAddressResponse
		return ret
	}

	return o.Address
}

// GetAddressOk returns a tuple with the Address field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityResponse) GetAddressOk() (*OrderFiscalEntityAddressResponse, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Address, true
}

// SetAddress sets field value
func (o *OrderFiscalEntityResponse) SetAddress(v OrderFiscalEntityAddressResponse) {
	o.Address = v
}

// GetEmail returns the Email field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderFiscalEntityResponse) GetEmail() string {
	if o == nil || IsNil(o.Email.Get()) {
		var ret string
		return ret
	}
	return *o.Email.Get()
}

// GetEmailOk returns a tuple with the Email field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderFiscalEntityResponse) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Email.Get(), o.Email.IsSet()
}

// HasEmail returns a boolean if a field has been set.
func (o *OrderFiscalEntityResponse) HasEmail() bool {
	if o != nil && o.Email.IsSet() {
		return true
	}

	return false
}

// SetEmail gets a reference to the given NullableString and assigns it to the Email field.
func (o *OrderFiscalEntityResponse) SetEmail(v string) {
	o.Email.Set(&v)
}

// SetEmailNil sets the value for Email to be an explicit nil
func (o *OrderFiscalEntityResponse) SetEmailNil() {
	o.Email.Set(nil)
}

// UnsetEmail ensures that no value is present for Email, not even an explicit nil
func (o *OrderFiscalEntityResponse) UnsetEmail() {
	o.Email.Unset()
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *OrderFiscalEntityResponse) GetMetadata() map[string]interface{} {
	if o == nil || IsNil(o.Metadata) {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityResponse) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *OrderFiscalEntityResponse) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *OrderFiscalEntityResponse) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderFiscalEntityResponse) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderFiscalEntityResponse) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *OrderFiscalEntityResponse) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *OrderFiscalEntityResponse) SetName(v string) {
	o.Name.Set(&v)
}

// SetNameNil sets the value for Name to be an explicit nil
func (o *OrderFiscalEntityResponse) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *OrderFiscalEntityResponse) UnsetName() {
	o.Name.Unset()
}

// GetTaxId returns the TaxId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderFiscalEntityResponse) GetTaxId() string {
	if o == nil || IsNil(o.TaxId.Get()) {
		var ret string
		return ret
	}
	return *o.TaxId.Get()
}

// GetTaxIdOk returns a tuple with the TaxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderFiscalEntityResponse) GetTaxIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.TaxId.Get(), o.TaxId.IsSet()
}

// HasTaxId returns a boolean if a field has been set.
func (o *OrderFiscalEntityResponse) HasTaxId() bool {
	if o != nil && o.TaxId.IsSet() {
		return true
	}

	return false
}

// SetTaxId gets a reference to the given NullableString and assigns it to the TaxId field.
func (o *OrderFiscalEntityResponse) SetTaxId(v string) {
	o.TaxId.Set(&v)
}

// SetTaxIdNil sets the value for TaxId to be an explicit nil
func (o *OrderFiscalEntityResponse) SetTaxIdNil() {
	o.TaxId.Set(nil)
}

// UnsetTaxId ensures that no value is present for TaxId, not even an explicit nil
func (o *OrderFiscalEntityResponse) UnsetTaxId() {
	o.TaxId.Unset()
}

// GetId returns the Id field value
func (o *OrderFiscalEntityResponse) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityResponse) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrderFiscalEntityResponse) SetId(v string) {
	o.Id = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *OrderFiscalEntityResponse) GetCreatedAt() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityResponse) GetCreatedAtOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *OrderFiscalEntityResponse) SetCreatedAt(v int64) {
	o.CreatedAt = v
}

// GetObject returns the Object field value
func (o *OrderFiscalEntityResponse) GetObject() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Object
}

// GetObjectOk returns a tuple with the Object field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityResponse) GetObjectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Object, true
}

// SetObject sets field value
func (o *OrderFiscalEntityResponse) SetObject(v string) {
	o.Object = v
}

// GetPhone returns the Phone field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderFiscalEntityResponse) GetPhone() string {
	if o == nil || IsNil(o.Phone.Get()) {
		var ret string
		return ret
	}
	return *o.Phone.Get()
}

// GetPhoneOk returns a tuple with the Phone field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderFiscalEntityResponse) GetPhoneOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Phone.Get(), o.Phone.IsSet()
}

// HasPhone returns a boolean if a field has been set.
func (o *OrderFiscalEntityResponse) HasPhone() bool {
	if o != nil && o.Phone.IsSet() {
		return true
	}

	return false
}

// SetPhone gets a reference to the given NullableString and assigns it to the Phone field.
func (o *OrderFiscalEntityResponse) SetPhone(v string) {
	o.Phone.Set(&v)
}

// SetPhoneNil sets the value for Phone to be an explicit nil
func (o *OrderFiscalEntityResponse) SetPhoneNil() {
	o.Phone.Set(nil)
}

// UnsetPhone ensures that no value is present for Phone, not even an explicit nil
func (o *OrderFiscalEntityResponse) UnsetPhone() {
	o.Phone.Unset()
}

func (o OrderFiscalEntityResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderFiscalEntityResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["address"] = o.Address
	if o.Email.IsSet() {
		toSerialize["email"] = o.Email.Get()
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.TaxId.IsSet() {
		toSerialize["tax_id"] = o.TaxId.Get()
	}
	toSerialize["id"] = o.Id
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["object"] = o.Object
	if o.Phone.IsSet() {
		toSerialize["phone"] = o.Phone.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderFiscalEntityResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"address",
		"id",
		"created_at",
		"object",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderFiscalEntityResponse := _OrderFiscalEntityResponse{}

	err = json.Unmarshal(data, &varOrderFiscalEntityResponse)

	if err != nil {
		return err
	}

	*o = OrderFiscalEntityResponse(varOrderFiscalEntityResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "address")
		delete(additionalProperties, "email")
		delete(additionalProperties, "metadata")
		delete(additionalProperties, "name")
		delete(additionalProperties, "tax_id")
		delete(additionalProperties, "id")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "object")
		delete(additionalProperties, "phone")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderFiscalEntityResponse struct {
	value *OrderFiscalEntityResponse
	isSet bool
}

func (v NullableOrderFiscalEntityResponse) Get() *OrderFiscalEntityResponse {
	return v.value
}

func (v *NullableOrderFiscalEntityResponse) Set(val *OrderFiscalEntityResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderFiscalEntityResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderFiscalEntityResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderFiscalEntityResponse(val *OrderFiscalEntityResponse) *NullableOrderFiscalEntityResponse {
	return &NullableOrderFiscalEntityResponse{value: val, isSet: true}
}

func (v NullableOrderFiscalEntityResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderFiscalEntityResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
