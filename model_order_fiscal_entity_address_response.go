/*
Femsa API

Femsa sdk

API version: 2.1.0
Contact: engineering@femsa.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package digitalfemsa

import (
	"encoding/json"
	"fmt"
)

// checks if the OrderFiscalEntityAddressResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderFiscalEntityAddressResponse{}

// OrderFiscalEntityAddressResponse Address of the fiscal entity
type OrderFiscalEntityAddressResponse struct {
	// Street name and number
	Street1 string `json:"street1"`
	// Street name and number
	Street2 NullableString `json:"street2,omitempty"`
	// Postal code
	PostalCode string `json:"postal_code"`
	// City
	City string `json:"city"`
	// State
	State *string `json:"state,omitempty"`
	// this field follows the [ISO 3166-1 alpha-2 standard](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2)
	Country string `json:"country"`
	// External number
	ExternalNumber       string  `json:"external_number"`
	Object               *string `json:"object,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OrderFiscalEntityAddressResponse OrderFiscalEntityAddressResponse

// NewOrderFiscalEntityAddressResponse instantiates a new OrderFiscalEntityAddressResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderFiscalEntityAddressResponse(street1 string, postalCode string, city string, country string, externalNumber string) *OrderFiscalEntityAddressResponse {
	this := OrderFiscalEntityAddressResponse{}
	this.Street1 = street1
	this.PostalCode = postalCode
	this.City = city
	this.Country = country
	this.ExternalNumber = externalNumber
	return &this
}

// NewOrderFiscalEntityAddressResponseWithDefaults instantiates a new OrderFiscalEntityAddressResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderFiscalEntityAddressResponseWithDefaults() *OrderFiscalEntityAddressResponse {
	this := OrderFiscalEntityAddressResponse{}
	return &this
}

// GetStreet1 returns the Street1 field value
func (o *OrderFiscalEntityAddressResponse) GetStreet1() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Street1
}

// GetStreet1Ok returns a tuple with the Street1 field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityAddressResponse) GetStreet1Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Street1, true
}

// SetStreet1 sets field value
func (o *OrderFiscalEntityAddressResponse) SetStreet1(v string) {
	o.Street1 = v
}

// GetStreet2 returns the Street2 field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OrderFiscalEntityAddressResponse) GetStreet2() string {
	if o == nil || IsNil(o.Street2.Get()) {
		var ret string
		return ret
	}
	return *o.Street2.Get()
}

// GetStreet2Ok returns a tuple with the Street2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OrderFiscalEntityAddressResponse) GetStreet2Ok() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Street2.Get(), o.Street2.IsSet()
}

// HasStreet2 returns a boolean if a field has been set.
func (o *OrderFiscalEntityAddressResponse) HasStreet2() bool {
	if o != nil && o.Street2.IsSet() {
		return true
	}

	return false
}

// SetStreet2 gets a reference to the given NullableString and assigns it to the Street2 field.
func (o *OrderFiscalEntityAddressResponse) SetStreet2(v string) {
	o.Street2.Set(&v)
}

// SetStreet2Nil sets the value for Street2 to be an explicit nil
func (o *OrderFiscalEntityAddressResponse) SetStreet2Nil() {
	o.Street2.Set(nil)
}

// UnsetStreet2 ensures that no value is present for Street2, not even an explicit nil
func (o *OrderFiscalEntityAddressResponse) UnsetStreet2() {
	o.Street2.Unset()
}

// GetPostalCode returns the PostalCode field value
func (o *OrderFiscalEntityAddressResponse) GetPostalCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PostalCode
}

// GetPostalCodeOk returns a tuple with the PostalCode field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityAddressResponse) GetPostalCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PostalCode, true
}

// SetPostalCode sets field value
func (o *OrderFiscalEntityAddressResponse) SetPostalCode(v string) {
	o.PostalCode = v
}

// GetCity returns the City field value
func (o *OrderFiscalEntityAddressResponse) GetCity() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.City
}

// GetCityOk returns a tuple with the City field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityAddressResponse) GetCityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.City, true
}

// SetCity sets field value
func (o *OrderFiscalEntityAddressResponse) SetCity(v string) {
	o.City = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *OrderFiscalEntityAddressResponse) GetState() string {
	if o == nil || IsNil(o.State) {
		var ret string
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityAddressResponse) GetStateOk() (*string, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *OrderFiscalEntityAddressResponse) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given string and assigns it to the State field.
func (o *OrderFiscalEntityAddressResponse) SetState(v string) {
	o.State = &v
}

// GetCountry returns the Country field value
func (o *OrderFiscalEntityAddressResponse) GetCountry() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Country
}

// GetCountryOk returns a tuple with the Country field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityAddressResponse) GetCountryOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Country, true
}

// SetCountry sets field value
func (o *OrderFiscalEntityAddressResponse) SetCountry(v string) {
	o.Country = v
}

// GetExternalNumber returns the ExternalNumber field value
func (o *OrderFiscalEntityAddressResponse) GetExternalNumber() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ExternalNumber
}

// GetExternalNumberOk returns a tuple with the ExternalNumber field value
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityAddressResponse) GetExternalNumberOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExternalNumber, true
}

// SetExternalNumber sets field value
func (o *OrderFiscalEntityAddressResponse) SetExternalNumber(v string) {
	o.ExternalNumber = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *OrderFiscalEntityAddressResponse) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderFiscalEntityAddressResponse) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *OrderFiscalEntityAddressResponse) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *OrderFiscalEntityAddressResponse) SetObject(v string) {
	o.Object = &v
}

func (o OrderFiscalEntityAddressResponse) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderFiscalEntityAddressResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["street1"] = o.Street1
	if o.Street2.IsSet() {
		toSerialize["street2"] = o.Street2.Get()
	}
	toSerialize["postal_code"] = o.PostalCode
	toSerialize["city"] = o.City
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	toSerialize["country"] = o.Country
	toSerialize["external_number"] = o.ExternalNumber
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OrderFiscalEntityAddressResponse) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"street1",
		"postal_code",
		"city",
		"country",
		"external_number",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderFiscalEntityAddressResponse := _OrderFiscalEntityAddressResponse{}

	err = json.Unmarshal(data, &varOrderFiscalEntityAddressResponse)

	if err != nil {
		return err
	}

	*o = OrderFiscalEntityAddressResponse(varOrderFiscalEntityAddressResponse)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "street1")
		delete(additionalProperties, "street2")
		delete(additionalProperties, "postal_code")
		delete(additionalProperties, "city")
		delete(additionalProperties, "state")
		delete(additionalProperties, "country")
		delete(additionalProperties, "external_number")
		delete(additionalProperties, "object")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOrderFiscalEntityAddressResponse struct {
	value *OrderFiscalEntityAddressResponse
	isSet bool
}

func (v NullableOrderFiscalEntityAddressResponse) Get() *OrderFiscalEntityAddressResponse {
	return v.value
}

func (v *NullableOrderFiscalEntityAddressResponse) Set(val *OrderFiscalEntityAddressResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderFiscalEntityAddressResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderFiscalEntityAddressResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderFiscalEntityAddressResponse(val *OrderFiscalEntityAddressResponse) *NullableOrderFiscalEntityAddressResponse {
	return &NullableOrderFiscalEntityAddressResponse{value: val, isSet: true}
}

func (v NullableOrderFiscalEntityAddressResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderFiscalEntityAddressResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
